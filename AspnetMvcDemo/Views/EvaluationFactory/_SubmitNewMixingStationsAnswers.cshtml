@{
    var ListListMixStationTitls = (List<AspnetMvcDemo.Models.MixingStationsType>)ViewBag.ListMixStationTitls;
}
        @foreach (var Qualification in ListListMixStationTitls)
        {
            var ListOfOptionsOfQualification = ((List<AspnetMvcDemo.Models.MixingStationsQuestion>)ViewBag.ListMixStationOptions).Where(p => p.MixingStationsTypesId == Qualification.ID).GroupBy(b => b.SubType_Arabic);
    <div>
        <h3 style="font-size:large; font-weight:bold ; text-decoration:underline; text-decoration-color:sandybrown;">
            <i class="ion-ios-star" style="color:sandybrown"></i>
            @Qualification.Title
        </h3>
        @for (int i = 0; i < ListOfOptionsOfQualification.Count(); i++)
        {
            if (ListOfOptionsOfQualification.ElementAtOrDefault(i).Key != null || ListOfOptionsOfQualification.ElementAtOrDefault(i).Key != string.Empty)
            {
                <div class="col-12" style="background-color:#2e323a; padding-top:0.5%; color:white;">
                    <h5 style="font-size:large; font-weight:bold; padding:0.5%;">
                        <i class="ion-ios-information-circle" style="color:white;"></i>
                        @ListOfOptionsOfQualification.ElementAtOrDefault(i).Key
                    </h5>
                </div>
            }
            foreach (var Options in ListOfOptionsOfQualification.ElementAtOrDefault(i))
            {
                var Answer = ((List<AspnetMvcDemo.Models.MixingStationsAnswersOfFactory>)ViewBag.MixingStationsAnswersOfFactories).Where(p => p.MixingStationsQuestionsId == Options.ID).Select(g => g.InputValue).FirstOrDefault();
    <div class="row">
        <label class="col-md-11" style="float:right">* &nbsp; @Options.Description</label>
        <hr class="container-m-nx border-light my-4">
        @if (Options.InputFieldType == "checkbox")
        {
            <input disabled class="col-md-1" type="checkbox" value="@Options.ID" @(Answer != null && int.Parse(Answer) == Options.ID ? "checked" : "") />
            <hr class="container-m-nx border-light my-4">
        }
        else if (Options.InputFieldType == "radiobutton")
        {
            if (ListOfOptionsOfQualification.ElementAtOrDefault(i).Key != null && ListOfOptionsOfQualification.ElementAtOrDefault(i).Key != string.Empty)
            {
                string RadioBtnId = Qualification.ID.ToString() + i.ToString();
                <input disabled id="" class="col-md-1 radio_@RadioBtnId" type="radio" value="@Options.ID" @(Answer != null && int.Parse(Answer) == Options.ID ? "checked" : "") />
                <hr class="container-m-nx border-light my-4">
            }
            else
            {
                <input disabled id="" class="col-md-1 radio_@Qualification.ID" type="radio" value="@Options.ID" @(Answer != null && int.Parse(Answer) == Options.ID ? "checked" : "") />
                <hr class="container-m-nx border-light my-4">
            }
        }
        else if (Options.InputFieldType == "text")
        {
            <input disabled class="col-md-1" type="text" value="@(Answer)" />
        }
    </div>
            }
        }
    </div>
        }
    